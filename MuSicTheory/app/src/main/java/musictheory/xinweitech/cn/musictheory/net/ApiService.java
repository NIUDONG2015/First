package musictheory.xinweitech.cn.musictheory.net;/** * Created by niudong on 2017/1/11. */public interface ApiService {    //  GET   /* @GET(NetConstants.TEACHER_PERSONALINFO + "{tid}")//记得get请求要拿括号替换    Observable<PersonalInfo> getPersonalInfo(@Path("tid") int tid);*/    //  GET/*    @GET(NetConstants.TEACHER_PERSONALINFO + "{tid}")//记得get请求要拿括号替换    Observable<DataBean> getT(@Path("tid") int tid);*//*    @GET("minisite/article.json?retrieve_type=by_minisite")    Observable<GuoKeBean> getGuokrHot(@Query("offset") int offset);*/    //POST/*    // 登录    @POST(NetConstants.AUTH + NetConstants.LOGIN)    @FormUrlEncoded    Observable<BaseModelBean<UserBean>> login(@Field("userName") String userName,                                              @Field("password") String password,                                              @Field("server") String server,                                              @Field("ssId") String ssId);    // 退出    @POST(NetConstants.AUTH + NetConstants.LOGOUT)    @FormUrlEncoded    Observable<BaseModelBean> logout(@Field("userId") String userId,                                     @Field("authToken") String authToken,                                     @Field("uid") String uid);    // 注册用户WIFI    @POST(NetConstants.PHONE_USER + NetConstants.WIFI)    @FormUrlEncoded    Observable<BaseModelBean> wifi(@Field("authToken") String authToken,                                   @Field("userId") String userId,                                   @Field("ssId") String ssId,                                   @Field("uid") String uid);    // 更改密码    @POST(NetConstants.AUTH + NetConstants.CHANGE_PASSWORD)    @FormUrlEncoded    Observable<UserNoteAddBean> changePassword(@Field("userName") String userName,                                               @Field("oldPassword") String oldPassword,                                               @Field("newPassword") String newPassword,                                               @Field("uid") String uid);    // 查询配置信息    @POST(NetConstants.COMMON_CONFIG + NetConstants.QUERY_SYS_CONFIG)    @FormUrlEncoded    Observable<ComConfigBean> queryConfig(@Field("authToken") String authToken,                                          @Field("uid") String uid);    // 更新一条提醒    @POST(NetConstants.USER_NOTE + NetConstants.UPDATE)    @FormUrlEncoded    Observable<Void> updateReminder(@Field("authToken") String authToken,                                    @Field("userNoteId") String userNoteId,                                    @Field("isFinished") String isFinished,                                    @Field("content") String content,                                    @Field("uid") String uid);    // 添加一条提醒zd    @POST(NetConstants.USER_NOTE + NetConstants.ADD)    @FormUrlEncoded    Observable<UserNoteAddBean> addReminder(@Field("authToken") String authToken,                                            @Field("userId") String userId,                                            @Field("content") String content,                                            @Field("planDate") String planDate,                                            @Field("uid") String uid);    // 删除一条提醒    @POST(NetConstants.USER_NOTE + NetConstants.DELETE)    @FormUrlEncoded    Observable<Void> deleteReminder(@Field("authToken") String authToken,                                    @Field("userNoteId") String userNoteId,                                    @Field("uid") String uid);    // 查询所有提醒    @POST(NetConstants.USER_NOTE + NetConstants.QUERY_ALL)    @FormUrlEncoded    Observable<BaseModelBean<List<ReminderBean>>> queryAllNote(@Field("userId") String userId,                                                               @Field("isFinished") String isFinished,                                                               @Field("uid") String uid,                                                               @Field("authToken") String authToken);    // 查询用户执行的任务    @POST(NetConstants.PHONE_JOB + NetConstants.DUTY_TASK)    @FormUrlEncoded    Observable<BaseModelBean<ArrayList<DutyBeanNew>>> queryDutyTask(@Field("authToken") String authToken,                                                                    @Field("userId") String userId,                                                                    @Field("stationAreaId") String stationOrgId,                                                                    @Field("uid") String uid);    // 查询用户监控的任务    @POST(NetConstants.PHONE_JOB + NetConstants.DUTY_MONITOR_TASK)    @FormUrlEncoded    Observable<BaseModelBean<List<DutyMonitorBeanNew>>> searchMonitorTask(@Field("authToken") String authToken,                                                                          @Field("userId") String userId,                                                                          @Field("stationAreaId") String stationAreaId,                                                                          @Field("uid") String uid);    // 查询到发车次信息   zd    @POST(NetConstants.PHONE_JOB + NetConstants.TRAIN_NUMBER_INFO)    @FormUrlEncoded    Observable<BaseModelBean<List<DaoFaBean>>> searchDaoFa(@Field("authToken") String authToken,                                                           @Field("stationAreaId") String stationAreaId,                                                           @Field("trainRunType") String trainRunType,                                                           @Field("uid") String uid);    // 更改作业状态    @POST(NetConstants.PHONE_JOB + NetConstants.USER_TASK_STATUS_CHANGE)    @FormUrlEncoded    Observable<BaseModelBean> changeStatus(@Field("authToken") String authToken,                                           @Field("userId") String userId,                                           @Field("jobOperatorId") String jobOperatorId,                                           @Field("uid") String uid);    // 查询用户可以查看的车站    @POST(NetConstants.AREA + NetConstants.FIND_USER_STATION_AREA)    @FormUrlEncoded    Observable<BaseModelBean<List<UserStation>>> findUserStationArea(@Field("authToken") String authToken,                                                                     @Field("userId") String userId,                                                                     @Field("uid") String uid);    // 任务详情    @POST(NetConstants.PHONE_JOB + NetConstants.TRAIN_AREA)    @FormUrlEncoded    Observable<BaseModelBean<TrainAreaBeanNew>> taskDetails(@Field("authToken") String authToken,                                                            @Field("jobOperatorId") String jobOperatorId,                                                            @Field("uid") String uid);    // 查询用户详细信息    @POST(NetConstants.ORG + NetConstants.FIND_USER)    @FormUrlEncoded    Observable<BaseModelBean<FindUserBean>> findUser(@Field("authToken") String authToken,                                                     @Field("userId") String userId,                                                     @Field("uid") String uid);    // 公告详细信息    @POST(NetConstants.PHONE_JOB + NetConstants.NOTICE_DETAIL)    @FormUrlEncoded    Observable<BaseModelBean<NoticeDetailBeanNew>> noticeDetail(@Field("authToken") String authToken,                                                                @Field("jobOperatorId") String jobOperatorId,                                                                @Field("uid") String uid);    // 公告可以发送给谁    @POST(NetConstants.GROUP + NetConstants.FIND_USER_BY_GROUP_TYPE)    @FormUrlEncoded    Observable<BaseModelBean<List<UserByGroupTypeBean>>> findUserByGroupType(@Field("authToken") String authToken,                                                                             @Field("userId") String userId,                                                                             @Field("type") String type,                                                                             @Field("uid") String uid);    // 查询用户角色对应的时间内工作班组    @POST(NetConstants.AUTH + NetConstants.FIND_USER_ROLE_WORK_PLAN_RUN_TEAM)    @FormUrlEncoded    Observable<BaseModelBean<List<WorkPlanRunTeamDto>>> findUserRoleWorkPlanRunTeam(@Field("authToken") String authToken,                                                                                    @Field("userId") String userId,                                                                                    @Field("stationAreaId") String stationAreaId,                                                                                    @Field("type") String type,                                                                                    @Field("dateStr") String dateStr,                                                                                    @Field("uid") String uid);    // 查询用户对班组对应的时间内工作班组    @POST(NetConstants.AUTH + NetConstants.findUserToTeamWorkPlanRunTeam)    @FormUrlEncoded    Observable<BaseModelBean<List<WorkPlanRunTeamDto>>> findUserToTeamWorkPlanRunTeam(@Field("authToken") String authToken,                                                                                      @Field("fromUserId") String userId,                                                                                      @Field("toTeamId") String toTeamId,                                                                                      @Field("stationAreaId") String stationAreaId,                                                                                      @Field("type") String type,                                                                                      @Field("dateStr") String dateStr,                                                                                      @Field("uid") String uid);    // 查询用户对用户对应的时间内工作班组    @POST(NetConstants.AUTH + NetConstants.findUserToUserWorkPlanRunTeam)    @FormUrlEncoded    Observable<BaseModelBean<List<WorkPlanRunTeamDto>>> findUserToUserWorkPlanRunTeam(@Field("authToken") String authToken,                                                                                      @Field("fromUserId") String fromUserId,                                                                                      @Field("toUserId") String toUserId,                                                                                      @Field("stationAreaId") String stationAreaId,                                                                                      @Field("type") String type,                                                                                      @Field("dateStr") String dateStr,                                                                                      @Field("uid") String uid);    // 软件权限    @POST(NetConstants.ORG + NetConstants.FIND_USER_SOFT_PERMISSION)    @FormUrlEncoded    Observable<BaseModelBean<List<SoftPermissionBean>>> findUserSoftPermission(@Field("authToken") String authToken,                                                                               @Field("userId") String userId,                                                                               @Field("uid") String uid);    // 公告从未读到已读    @POST(NetConstants.ORG + NetConstants.READ_USER_NOTICE)    @FormUrlEncoded    Observable<BaseModelBean> readUserNotice(@Field("authToken") String authToken,                                             @Field("noticeId") String noticeId,                                             @Field("uid") String uid);    // 获取广播SIP电话号码    @Headers({"Content-Type: application/json", "Accept: application/json"})    @POST(NetConstants.PHONE_JOB + NetConstants.CREATE_PA_DEVICE)    Observable<BaseModelBean<PADeviceInfosDto>> createPADevice(@Body() LoginPADeviceDto dto);    // 添加客运命令    @Headers({"Content-Type: application/json", "Accept: application/json"})    @POST(NetConstants.ORG + NetConstants.ADD_USER_NOTICE)    Observable<BaseModelBean<String>> addUserNotice(@Body() OrderBean bean);    // 操作控制设备    @Headers({"Content-Type: application/json", "Accept: application/json"})    @POST(NetConstants.PHONE_JOB + NetConstants.OPER_CONTR_DEVICE)    Observable<BaseModelBean> operContrDevice(@Body() DeviceEntity bean);    // 查询通讯录的好友目录    @POST(NetConstants.FINDYOURRELATEUSER)    Call<BaseModelBean<List<RelateUserBean>>> getRelateUser(            @Query("userId") String userId,            @Query("orgId") String orgId,            @Query("uid") String uid,            @Query("authToken") String authToken);    // 获取一键配置的用户的信息    @POST(NetConstants.FINDONEKEYCALLUSER)    Call<BaseModelBean<List<OneKeyCallBean>>> getOneKeyCallUser(@Query("uid") String uid,                                                                @Query("authToken") String authToken);    // 查询用户所属的租组（Im，客运命令，对讲）(groupType:COMMAND,CALL,IM)    @POST(NetConstants.QUERYUSERGROUP)    Call<BaseModelBean<List<QueryUserGroupBean>>> getUserGroup(@Query("userId") String userId,                                                               @Query("groupType") String groupType,                                                               @Query("authToken") String authToken);    //查询组织机构    @POST(NetConstants.FINDYOURORGS)    Call<BaseModelBean<List<FindYourOrgs>>> getFindYourOrgs(@Query("userId") String userId,                                                            @Query("uid") String uid,                                                            @Query("authToken") String authToken);    //查询用户信息    @POST(NetConstants.FIND_USER)    Call<BaseModelBean<List<FindUserBean>>> getUserInfo(@Query("userId") String userId,                                                        @Query("uid") String uid,                                                        @Query("authToken") String authToken);    // 查询用户组    @POST(NetConstants.PHONE_USER + NetConstants.FIND_YOUR_GROUP)    @FormUrlEncoded    Observable<BaseModelBean<List<ContractGroupBean>>> findYourGroup(@Field("authToken") String authToken,                                                                     @Field("userId") String userId,                                                                     @Field("uid") String uid);    //班组    @POST(NetConstants.PHONE_USER + NetConstants.FIND_TEAM_GROUP)    Call<BaseModelBean<List<RoleTeamDetailDto>>> getRoleTeamDetailDto(            @Query("authToken") String authToken,            @Query("userId") String userId,            @Query("uid") String uid    );    //班组下的用户    @POST(NetConstants.PHONE_USER + NetConstants.FIND_TEAM_GROUP_USER)    Call<BaseModelBean<List<UserShortDto>>> getUserShortDto(            @Query("authToken") String authToken,            @Query("teamId") String teamId,            @Query("userId") String userId,            @Query("uid") String uid    );    // 查询用户当前工作班组    @POST(NetConstants.AUTH + NetConstants.FIND_WORK_PLAN_RUN_TEAM)    @FormUrlEncoded    Observable<BaseModelBean<WorkPlanRunTeamDto>> findWorkPlanRunTeam(@Field("authToken") String authToken,                                                                      @Field("userId") String userId,                                                                      @Field("stationAreaId") String stationAreaId,                                                                      @Field("uid") String uid);    // 查询组织机构    @POST(NetConstants.ORG + NetConstants.FIND_YOUR_ORGS)    @FormUrlEncoded    Observable<BaseModelBean<List<FindYourOrgs>>> findYourOrgs(@Field("authToken") String authToken,                                                               @Field("userId") String userId,                                                               @Field("uid") String uid);    // 查询通讯录    @POST(NetConstants.PHONE_USER + NetConstants.FIND_YOUR_RELATE_USER)    @FormUrlEncoded    Observable<BaseModelBean<List<RelateUserBean>>> findYourRelateUser(@Field("authToken") String authToken,                                                                       @Field("userId") String userId,                                                                       @Field("orgId") String orgId,                                                                       @Field("uid") String uid);    // 释放广播    @POST(NetConstants.PHONE_JOB + NetConstants.DISPOSE_PA_DEVICES)    @FormUrlEncoded    Observable<Void> disposePADevice(@Field("authToken") String authToken,                                     @Field("userId") String userId,                                     @Field("uid") String uid);    // 上传任务备注    @POST(NetConstants.PHONE_JOB + NetConstants.ADD_TASK_NOTE)    @FormUrlEncoded    Observable<BaseModelBean> addTaskNote(@Field("authToken") String authToken,                                          @Field("jobOperatorId") String jobOperatorId,                                          @Field("ssId") String ssId,                                          @Field("note") String note,                                          @Field("uid") String uid);    // 查询监控的任务详情    @Headers({"Content-Type: application/json", "Accept: application/json"})    @POST(NetConstants.PHONE_JOB + NetConstants.MONITOR_TASK_DETAIL)    Observable<BaseModelBean<MonitorTaskBean>> dutyMonitorTask(@Body() MonitorTaskInfo bean);    // 查询监控的命令或协作完成状态    @POST(NetConstants.PHONE_JOB + NetConstants.MONITOR_NOTICE)    @FormUrlEncoded    Observable<BaseModelBean<MonitorNoticeBean>> monitorNotice(@Field("authToken") String authToken,                                                               @Field("taskId") String taskId,                                                               @Field("uid") String uid);    //查询你的系统提醒    @POST(NetConstants.FIND_YOUR_MESSAGE)    @FormUrlEncoded    Observable<FindYourMessageBean> findYourMessage(@Field("userId") String userId,                                                    @Field("authToken") String authToken,                                                    @Field("uid") String uid);    //设置系统提醒已读    @POST(NetConstants.READ_YOUR_MESSAGE)    @FormUrlEncoded    Observable<Void> readYourMessage(@Field("remindId") String remindId,                                     @Field("authToken") String authToken,                                     @Field("uid") String uid);    //删除已读消息提醒    @Headers({"Content-Type: application/json", "Accept: application/json"})    @POST(NetConstants.PHONE_USER + NetConstants.DELETE_YOUR_MESSAGE)    @FormUrlEncoded    Observable<BaseModelBean> deleteYourMessage(@Body SystemRemindFragment.RemindsDeleteDto bean);    //重点旅客    @POST(NetConstants.ADD_KEY_PASSENGER)    @FormUrlEncoded    Observable<AddKeyPassenger> addKeyPassenger(@Field("fromUserId") String fromUserId,                                                @Field("workPlanRunTeamId") String workPlanRunTeamId,                                                @Field("remindDateTime") String remindDateTime,                                                @Field("trainNumber") String trainNumber,                                                @Field("type") String type,                                                @Field("serviceUserName") String serviceUserName,                                                @Field("phoneNumber") String phoneNumber,                                                @Field("tool") String tool,                                                @Field("remindTime") String remindTime,                                                @Field("toWorkPlanRunTeamId") String toWorkPlanRunTeamId,                                                @Field("authToken") String authToken,                                                @Field("uid") String uid);    //失物登记    @POST(NetConstants.REGISTRATION_FOR_LOST)    @FormUrlEncoded    Observable<BaseModelBean<String>> registrationForLost(@Field("userId") String userId,                                                          @Field("remindDateTime") String remindDateTime,                                                          @Field("trainNumber") String trainNumber,                                                          @Field("stationName") String stationName,                                                          @Field("goods") String goods,                                                          @Field("feature") String feature,                                                          @Field("authToken") String authToken,                                                          @Field("uid") String uid);    //获取设备列表    @POST(NetConstants.FIND_YOUR_DEVICE)    @FormUrlEncoded    Observable<FindYourDeviceBean> findYourDevice(@Field("userId") String userId,                                                  @Field("orgId") String orgId,                                                  @Field("Type") String type,                                                  @Field("authToken") String authToken,                                                  @Field("uid") String uid);    //查询我下面的班组工作计划    @POST(NetConstants.FIND_MY_NEXT_WORK_PLAN)    @FormUrlEncoded    Observable<FindMyNetWorkPlanBean> findMyNetWork(@Field("uid") String uid,                                                    @Field("authToken") String authToken);    //查询我接收的交接班工作计划    @POST(NetConstants.FIND_MY_RECEIVE_TRANSFER)    @FormUrlEncoded    Observable<TransferBean> findMyReceiveTransfer(@Field("userId") String userId,                                                   @Field("authToken") String authToken,                                                   @Field("uid") String uid);    //查询我发送的交接班工作计划    @POST(NetConstants.FIND_MY_SENT_TRANSFER)    @FormUrlEncoded    Observable<TransferBean> findMySentTransfer(@Field("userId") String userId,                                                @Field("authToken") String authToken,                                                @Field("uid") String uid);    //已读我接收的交班消息    @POST(NetConstants.READ_TRANSFER)    @FormUrlEncoded    Observable<Void> readTransfer(@Field("userId") String userId,                                  @Field("transferId") String transferId,                                  @Field("authToken") String authToken,                                  @Field("uid") String uid);    //提交交接班信息    @POST(NetConstants.TRANSFER)    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<TransferBean> transfer(@Body RequestBody transferBody);    //更新云台    @POST(NetConstants.POST_OPER_PTZ)    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<Void> postOperPtz(@Body RequestBody postOperPtz);    //提交交接班信息    @POST(NetConstants.GROUP + NetConstants.FIND_USER_GROUP_PERMISSION)    @FormUrlEncoded    Observable<BaseModelBean<PermissionBean>> findUserGroupPermission(@Field("authToken") String authToken,                                                                      @Field("userId") String userId,                                                                      @Field("uid") String uid);    //检查是否需要重新下载头像    @POST(NetConstants.FILE + NetConstants.VALIDATE_DOWNLOAD)    @FormUrlEncoded    Observable<BaseModelBean> validateDownload(@Field("authToken") String authToken,                                               @Field("id") String id,                                               @Field("latestDownLoadTime") String latestDownLoadTime,                                               @Field("type") String type,                                               @Field("uid") String uid);    //得到快捷命令    @POST(NetConstants.GET_ALL_TRAINS_SHORT_CUT)    @FormUrlEncoded    Observable<GetAllTrainsShortCutBean> getAllTrainsShortCut(@Field("userId") String userId,                                                              @Field("authToken") String authToken,                                                              @Field("uid") String uid);    //操作快捷命令    @POST(NetConstants.OPER_SHORT_CUT)    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<Void> operShortCut(@Body RequestBody postOperPtz);    //查询车次运行区域（检票口、股道、候车室、站台）    @POST(NetConstants.FIND_AREA)    @FormUrlEncoded    Observable<FindAreaBean> findArea(@Field("userId") String userId,                                      @Field("areaType") String areaType,                                      @Field("authToken") String authToken,                                      @Field("uid") String uid);    //查询单个车次的信息    @POST(NetConstants.FIND_ONE_TRAIN_NUMBER)    @FormUrlEncoded    Observable<FindOneTrainNumber> findOneTrainNumber(@Field("runId") String runId,                                                      @Field("authToken") String authToken,                                                      @Field("uid") String uid);    //更新车次运行区域    @POST(NetConstants.UPDATE_TRAIN_AREA)    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<Void> updateTrainArea(@Body RequestBody trainArea);    //查询某个任务下上传的文件信息    @POST(NetConstants.PHONE_JOB + NetConstants.TASK_FILE_INFO)    @FormUrlEncoded    Observable<BaseModelBean<ArrayList<TaskFilePathDto>>> taskFileInfo(@Field("authToken") String authToken,                                                                       @Field("taskId") String taskId,                                                                       @Field("carrierType") int carrierType,                                                                       @Field("uid") String uid);    //申请节目广播    @POST(NetConstants.CREATE_PA_MUN)    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<CreatePAMunBean> createPAMun(@Body RequestBody trainArea);    //释放节目广播    @POST(NetConstants.DISPOSE_PA_MENU)    @FormUrlEncoded    Observable<Void> disposePAMenu(@Field("paActionID") String paActionID);    //查询用户的昵称    @POST(NetConstants.SIPTELLADDRESS)    @FormUrlEncoded    Observable<BaseModelBean<SipAddressBean>> getNickForSip(@Field("authToken") String authToken,                                                            @Field("sipTellAddress") String sipTellAddress,                                                            @Field("uid") String uid);    //查询用户的昵称    @POST(NetConstants.PHONE_JOB + NetConstants.GET_CONTR_DEVICE_INFO)    @FormUrlEncoded    Observable<BaseModelBean<List<ContrDeviceInfo>>> getControlDeviceInfo(@Field("authToken") String authToken,                                                                          @Field("uid") String uid);*/}